//
// Generated file, do not edit! Created by nedtool 5.0 from Messages/SM_UserVM_Finish.msg.
//

#ifndef __SM_USERVM_FINISH_M_H
#define __SM_USERVM_FINISH_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
	#include "SIMCAN_Message.h"
	
// }}

/**
 * Class generated from <tt>Messages/SM_UserVM_Finish.msg:11</tt> by nedtool.
 * <pre>
 * ///
 * /// SIMCAN Message for User requests
 * ///
 * message SM_UserVM_Finish extends SIMCAN_Message
 * {
 *     @customize(false);
 * 
 *     string userID;		// ID of the user instance
 *     string strVmId;	    // Id of the VM that allocs the APP    
 * }
 * </pre>
 */
class SM_UserVM_Finish : public ::SIMCAN_Message
{
  protected:
    omnetpp::opp_string userID;
    omnetpp::opp_string strVmId;

  private:
    void copy(const SM_UserVM_Finish& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SM_UserVM_Finish&);

  public:
    SM_UserVM_Finish(const char *name=nullptr, int kind=0);
    SM_UserVM_Finish(const SM_UserVM_Finish& other);
    virtual ~SM_UserVM_Finish();
    SM_UserVM_Finish& operator=(const SM_UserVM_Finish& other);
    virtual SM_UserVM_Finish *dup() const {return new SM_UserVM_Finish(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getUserID() const;
    virtual void setUserID(const char * userID);
    virtual const char * getStrVmId() const;
    virtual void setStrVmId(const char * strVmId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const SM_UserVM_Finish& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, SM_UserVM_Finish& obj) {obj.parsimUnpack(b);}


#endif // ifndef __SM_USERVM_FINISH_M_H

