[General]
## TEMPORAL
print-undisposed=true

## Time resolution
simtime-resolution = ps

## Network
network = INETComm

## Comand line environment
cmdenv-express-mode = false
cmdenv-performance-display=false
cmdenv-event-banners=false
ned-path = ../../src;../;

## Log
**.cloudProvider.cmdenv-log-level = off
**.userGenerator.cmdenv-log-level = error
**.dcManager.cmdenv-log-level = error
**.cmdenv-log-level = off	## off, error, info, debug and trace
cmdenv-log-prefix = "(%t):[%l] %m  "

## Allow to examine details of recorded history of a simulation, focusing on the behavior instead of the statistical results.
record-eventlog = false
**.module-eventlog-recording = false
eventlog-message-detail-pattern = *:userID,strVmId,isResponse,operation,result

## Recording of simulation results - recordScalar() - recordStatistic()
**.statistic-recording = false  ## from a @statistic in ned file
**.scalar-recording = false ## scalar or a statistic object (cStdDev to record summary statistics)
**.vector-recording = false ## output vector (recorded using cOutVector objects)
**.bin-recording = false ##  bins of a histogram object (cHistogram, cPSquare, cKSplit)

## Random seeds fix
seed-set = 0
num-rngs = 1
seed-0-mt = 0

################################################################
###  Configuration of User Generator:
################################################################
ScenarioTest.userGenerator.intervalBetweenUsers = true
ScenarioTest.userGenerator.distribution = 60s
ScenarioTest.userGenerator.maxStartTime_t1 = 100000000
ScenarioTest.userGenerator.nRentTime_t2 = 10000
ScenarioTest.userGenerator.maxSubTime_t3 = 55000
ScenarioTest.userGenerator.maxSubscriptionTime = 86400
ScenarioTest.userGenerator.offerAcceptanceRate = 0.9
ScenarioTest.userGenerator.shuffleUsers = false

#NumDataCentres | NameDc NumReservedMachines NumComputingRacksType InstancesTypeRack NameRack | NumNodesType InstancesNodes | NodeTypeName disk memory numCpus cpuSpeed | NumStorageRacksType InstancesTypeRack NameRack | NumNodesType InstancesNodes | NodeTypeName disk memory numCpus cpuSpeed |
*.dataCentresList = "1 DataCentre_A 2 2 Rack_A 21 2 Node_A 500 256.0 128 60000 2 Rack_B 21 2 Node_B 500 512.0 128 60000 0"

###-----------------------------------------------------------------
###-.-  Configuration of DataCentre_A
###-----------------------------------------------------------------

*.dc_DataCentre[*].dcManager.dataCentreConfig = "DataCentre_A 1 2 Rack_A 32 16 Node_A 500 64.0 4 60000 0 "

###-----------------------------------------------------------------
###-.-  Configuration of the computing racks type A
###-----------------------------------------------------------------
*.dc_DataCentre[*].blade[*].staticAppAssignment = false
*.dc_DataCentre[*].blade[*].isVirtualHardware = true
*.dc_DataCentre[*].blade[*].maxUsers = 24
*.dc_DataCentre[*].blade[*].maxVMs = 24
*.dc_DataCentre[*].blade[*].numCpuCores = 24
*.dc_DataCentre[*].blade[*].memorySize = 256GB
*.dc_DataCentre[*].blade[*].diskSize = 500GB
*.dc_DataCentre[*].blade[*].diskReadBandwidth = 500Mbps
*.dc_DataCentre[*].blade[*].diskWriteBandwidth = 500Mbps

# Hypervisor
*.dc_DataCentre[*].blade[*].osModule.hypervisor.active = true

# CPU
*.dc_DataCentre[*].blade[*].cpu.cpuCore[*].speed = 60000
*.dc_DataCentre[*].blade[*].cpu.cpuCore[*].tick = 60s

# Apps
*.dc_DataCentre[*].blade[*].osModule.appsVectors[*].appModule[*].userAppName = "DummyApplication"

[Config TestEdgeFog]
network = ScenarioTestEdgeFog
sim-time-limit = 500s
ScenarioTestEdgeFog.**.bandwidthPercentage.result-recording-modes = all,+vector
ScenarioTestEdgeFog.**.bandwidthPercentage.statistic-recording = true
ScenarioTestEdgeFog.**.statistic-recording = true
ScenarioTestEdgeFog.**.scalar-recording = true
ScenarioTestEdgeFog.**.vector-recording = true
# Records the bytes being sent through this specific channel attached to this module gate
#ScenarioTestEdgeFog.controller.toFog.channel.packetBytes.statistic-recording = true
#ScenarioTestEdgeFog.controller.toFog.channel.packetBytes.scalar-recording = true
#ScenarioTestEdgeFog.controller.toFog.channel.packetBytes.vector-recording = true
#ScenarioTestEdgeFog.controller.toFog.**.result-recording-modes = default
#ScenarioTestEdgeFog.controller.toFog.**.statistic-recording = true

[Config INETComm]
# network = INETComm
**.netAdapter1.debug = true
# Configurator settings
#*.configurator.dumpAddresses = true
#*.configurator.dumpTopology = true
#*.configurator.dumpLinks = true
#*.configurator.dumpRoutes = true

# SimSchema settings
*.simData.simSchema.typename = "SimSchemaMySQL"
*.simData.simSchema.hostName = "tcp://127.0.0.1:3306"

# Experiment settings
*.simData.manager.experiment = "Test"

# Routing settings
#*.*.ipv4.arp.typename = "GlobalArp"
*.*.ipv4.routingTable.netmaskRoutes = ""

# Wireless settings
*.*.wlan[*].bitrate = 54Mbps

# Using inline XML configuration
*.configurator.dumpConfig = "ips.xml"
*.configurator.config = xml("<config> \
                                <interface hosts='*.dns_server' names='eth0' address='199.7.83.42'/> \
                                <interface hosts='dc_DataCentre[0].networkAdapter' names='eth0' address='10.0.0.100'/> \
								<interface hosts='**' address='10.x.x.x' netmask='255.x.x.x'/> \
                             </config>")
